package br.com.pointel.jarch.data;

import br.com.pointel.jarch.mage.WizData;

public class Field implements Data {

    public Integer ord;
    public String name;
    public Nature nature;
    public Integer size;
    public Integer precision;
    public Boolean notNull;
    public Boolean autoIncrement;
    public Boolean autoGenerated;
    public Boolean keyPrimary;

    private transient Table table;

    public Field() {
    }

    public Field(String name) {
        this.name = name;
    }

    public Field(Integer ord, String name) {
        this.ord = ord;
        this.name = name;
    }

    public Field(String name, Nature nature) {
        this.name = name;
        this.nature = nature;
    }

    public Field(Integer ord, String name, Nature nature) {
        this.ord = ord;
        this.name = name;
        this.nature = nature;
    }

    public Field(String name, Nature nature, Boolean notNull) {
        this.name = name;
        this.nature = nature;
        this.notNull = notNull;
    }

    public Field(Integer ord, String name, Nature nature, Boolean notNull) {
        this.ord = ord;
        this.name = name;
        this.nature = nature;
        this.notNull = notNull;
    }

    public Field(String name, Nature nature, Boolean notNull, Boolean keyPrimary) {
        this.name = name;
        this.nature = nature;
        this.notNull = notNull;
        this.keyPrimary = keyPrimary;
    }

    public Field(Integer ord, String name, Nature nature, Boolean notNull, Boolean keyPrimary) {
        this.ord = ord;
        this.name = name;
        this.nature = nature;
        this.notNull = notNull;
        this.keyPrimary = keyPrimary;
    }

    public Field(String name, Nature nature, Integer size) {
        this.name = name;
        this.nature = nature;
        this.size = size;
    }

    public Field(Integer ord, String name, Nature nature, Integer size) {
        this.ord = ord;
        this.name = name;
        this.nature = nature;
        this.size = size;
    }

    public Field(String name, Nature nature, Integer size, Boolean notNull) {
        this.name = name;
        this.nature = nature;
        this.size = size;
        this.notNull = notNull;
    }

    public Field(Integer ord, String name, Nature nature, Integer size, Boolean notNull) {
        this.ord = ord;
        this.name = name;
        this.nature = nature;
        this.size = size;
        this.notNull = notNull;
    }

    public Field(String name, Nature nature, Integer size, Integer precision) {
        this.name = name;
        this.nature = nature;
        this.size = size;
        this.precision = precision;
    }

    public Field(Integer ord, String name, Nature nature, Integer size, Integer precision) {
        this.ord = ord;
        this.name = name;
        this.nature = nature;
        this.size = size;
        this.precision = precision;
    }

    public Field(String name, Nature nature, Integer size, Integer precision, Boolean notNull) {
        this.name = name;
        this.nature = nature;
        this.size = size;
        this.precision = precision;
        this.notNull = notNull;
    }

    public Field(Integer ord, String name, Nature nature, Integer size, Integer precision, Boolean notNull) {
        this.ord = ord;
        this.name = name;
        this.nature = nature;
        this.size = size;
        this.precision = precision;
        this.notNull = notNull;
    }

    public Field(String name, Nature nature, Integer size, Integer precision, Boolean notNull, Boolean keyPrimary) {
        this.name = name;
        this.nature = nature;
        this.size = size;
        this.precision = precision;
        this.notNull = notNull;
        this.keyPrimary = keyPrimary;
    }

    public Field(Integer ord, String name, Nature nature, Integer size, Integer precision, Boolean notNull, Boolean keyPrimary) {
        this.ord = ord;
        this.name = name;
        this.nature = nature;
        this.size = size;
        this.precision = precision;
        this.notNull = notNull;
        this.keyPrimary = keyPrimary;
    }

    public Field(String name, Nature nature, Integer size, Integer precision, Boolean notNull, Boolean autoIncrement, Boolean autoGenerated, Boolean keyPrimary) {
        this.name = name;
        this.nature = nature;
        this.size = size;
        this.precision = precision;
        this.notNull = notNull;
        this.autoIncrement = autoIncrement;
        this.autoGenerated = autoGenerated;
        this.keyPrimary = keyPrimary;
    }

    public Field(Integer ord, String name, Nature nature, Integer size, Integer precision, Boolean notNull, Boolean autoIncrement, Boolean autoGenerated, Boolean keyPrimary) {
        this.ord = ord;
        this.name = name;
        this.nature = nature;
        this.size = size;
        this.precision = precision;
        this.notNull = notNull;
        this.autoIncrement = autoIncrement;
        this.autoGenerated = autoGenerated;
        this.keyPrimary = keyPrimary;
    }

    public Field(String name, Nature nature, Integer size, Integer precision, Boolean notNull, Boolean autoIncrement, Boolean autoGenerated, Boolean keyPrimary, Table table) {
        this.name = name;
        this.nature = nature;
        this.size = size;
        this.precision = precision;
        this.notNull = notNull;
        this.autoIncrement = autoIncrement;
        this.autoGenerated = autoGenerated;
        this.keyPrimary = keyPrimary;
        this.table = table;
    }

    public Field(Integer ord, String name, Nature nature, Integer size, Integer precision, Boolean notNull, Boolean autoIncrement, Boolean autoGenerated, Boolean keyPrimary, Table table) {
        this.ord = ord;
        this.name = name;
        this.nature = nature;
        this.size = size;
        this.precision = precision;
        this.notNull = notNull;
        this.autoIncrement = autoIncrement;
        this.autoGenerated = autoGenerated;
        this.keyPrimary = keyPrimary;
        this.table = table;
    }

    public boolean hasOrd() {
        return this.ord != null;
    }

    public boolean hasName() {
        return this.name != null && !this.name.isEmpty();
    }

    public boolean hasNature() {
        return this.nature != null;
    }

    public boolean hasSize() {
        return this.size != null;
    }

    public boolean hasPrecision() {
        return this.precision != null;
    }

    public boolean hasNotNull() {
        return this.notNull != null;
    }

    public boolean isNotNull() {
        return Boolean.TRUE.equals(this.notNull);
    }

    public boolean isNull() {
        return !Boolean.TRUE.equals(this.notNull);
    }

    public boolean hasAutoIncrement() {
        return this.autoIncrement != null;
    }

    public boolean isAutoIncrement() {
        return Boolean.TRUE.equals(this.autoIncrement);
    }

    public boolean isNotAutoIncrement() {
        return !Boolean.TRUE.equals(this.autoIncrement);
    }

    public boolean hasAutoGenerated() {
        return this.autoGenerated != null;
    }

    public boolean isAutoGenerated() {
        return Boolean.TRUE.equals(this.autoGenerated);
    }

    public boolean isNotAutoGenerated() {
        return !Boolean.TRUE.equals(this.autoGenerated);
    }

    public boolean hasKeyPrimary() {
        return this.keyPrimary != null;
    }

    public boolean isKeyPrimary() {
        return Boolean.TRUE.equals(this.keyPrimary);
    }

    public boolean isNotKeyPrimary() {
        return !Boolean.TRUE.equals(this.keyPrimary);
    }

    public boolean hasTable() {
        return this.table != null;
    }

    public Field withOrd(Integer ord) {
        this.ord = ord;
        return this;
    }

    public Field withNoOrd() {
        this.ord = null;
        return this;
    }

    public Field withName(String name) {
        this.name = name;
        return this;
    }

    public Field withNoName() {
        this.name = null;
        return this;
    }

    public Field withNature(Nature nature) {
        this.nature = nature;
        return this;
    }

    public Field withNoNature() {
        this.nature = null;
        return this;
    }

    public Field withSize(Integer size) {
        this.size = size;
        return this;
    }

    public Field withNoSize() {
        this.size = null;
        return this;
    }

    public Field withPrecision(Integer precision) {
        this.precision = precision;
        return this;
    }

    public Field withNoPrecision() {
        this.precision = null;
        return this;
    }

    public Field withNotNull(Boolean notNull) {
        this.notNull = notNull;
        return this;
    }

    public Field withNoNotNull() {
        this.notNull = null;
        return this;
    }

    public Field withAutoIncrement(Boolean autoIncrement) {
        this.autoIncrement = autoIncrement;
        return this;
    }

    public Field withNoAutoIncrement() {
        this.autoIncrement = null;
        return this;
    }

    public Field withAutoGenerated(Boolean autoGenerated) {
        this.autoGenerated = autoGenerated;
        return this;
    }

    public Field withNoAutoGenerated() {
        this.autoGenerated = null;
        return this;
    }

    public Field withKeyPrimary(Boolean keyPrimary) {
        this.keyPrimary = keyPrimary;
        return this;
    }

    public Field withNoKeyPrimary() {
        this.keyPrimary = null;
        return this;
    }

    public Field withTable(Table table) {
        this.table = table;
        return this;
    }

    public Field withNoTable() {
        this.table = null;
        return this;
    }

    public Field uponOrd(Integer ord) {
        Field clone = this.clone();
        clone.ord = ord;
        return clone;
    }

    public Field uponNoOrd() {
        Field clone = this.clone();
        clone.ord = null;
        return clone;
    }

    public Field uponName(String name) {
        Field clone = this.clone();
        clone.name = name;
        return clone;
    }

    public Field uponNoName() {
        Field clone = this.clone();
        clone.name = null;
        return clone;
    }

    public Field uponNature(Nature nature) {
        Field clone = this.clone();
        clone.nature = nature;
        return clone;
    }

    public Field uponNoNature() {
        Field clone = this.clone();
        clone.nature = null;
        return clone;
    }

    public Field uponSize(Integer size) {
        Field clone = this.clone();
        clone.size = size;
        return clone;
    }

    public Field uponNoSize() {
        Field clone = this.clone();
        clone.size = null;
        return clone;
    }

    public Field uponPrecision(Integer precision) {
        Field clone = this.clone();
        clone.precision = precision;
        return clone;
    }

    public Field uponNoPrecision() {
        Field clone = this.clone();
        clone.precision = null;
        return clone;
    }

    public Field uponNotNull(Boolean notNull) {
        Field clone = this.clone();
        clone.notNull = notNull;
        return clone;
    }

    public Field uponNoNotNull() {
        Field clone = this.clone();
        clone.notNull = null;
        return clone;
    }

    public Field uponAutoIncrement(Boolean autoIncrement) {
        Field clone = this.clone();
        clone.autoIncrement = autoIncrement;
        return clone;
    }

    public Field uponNoAutoIncrement() {
        Field clone = this.clone();
        clone.autoIncrement = null;
        return clone;
    }

    public Field uponAutoGenerated(Boolean autoGenerated) {
        Field clone = this.clone();
        clone.autoGenerated = autoGenerated;
        return clone;
    }

    public Field uponNoAutoGenerated() {
        Field clone = this.clone();
        clone.autoGenerated = null;
        return clone;
    }

    public Field uponKeyPrimary(Boolean keyPrimary) {
        Field clone = this.clone();
        clone.keyPrimary = keyPrimary;
        return clone;
    }

    public Field uponNoKeyPrimary() {
        Field clone = this.clone();
        clone.keyPrimary = null;
        return clone;
    }

    public Field uponTable(Table table) {
        Field clone = this.clone();
        clone.table = table;
        return clone;
    }

    public Field uponNoTable() {
        Field clone = this.clone();
        clone.table = null;
        return clone;
    }

    @Override
    public Field clone() {
        return (Field) this.deepClone();
    }

    @Override
    public boolean equals(Object that) {
        return this.deepEquals(that);
    }

    @Override
    public int hashCode() {
        return this.deepHash();
    }

    @Override
    public String toString() {
        return this.toChars();
    }

    public static Field fromChars(String chars) {
        return Base.fromChars(chars, Field.class);
    }

    public Table getTable() {
        return table;
    }

    public void setTable(Table table) {
        this.table = table;
    }

    public String getReferenceName() {
        return table != null ? table.getReferenceName() + "." + name : name;
    }

    public Typed toTyped() {
        return new Typed(getReferenceName(), nature);
    }

    public Typed toTyped(String alias) {
        return new Typed(getReferenceName(), nature, alias);
    }

    public Valued toValued() {
        return new Valued(getReferenceName(), nature);
    }

    public Valued toValued(Object value) {
        return new Valued(getReferenceName(), nature, value);
    }

    public Filter toFilter() {
        return new Filter().withField(this);
    }

    public String toFormatted(Object value) throws Exception {
        return WizData.toFormatted(this.nature, value);
    }

    public <T> T fromFormatted(String formatted, Class<T> onClass) throws Exception {
        return WizData.fromFormatted(this.nature, formatted, onClass);
    }
    
    public Object fromFormatted(String formatted) throws Exception {
        return WizData.fromFormatted(this.nature, formatted);
    }
    
}
